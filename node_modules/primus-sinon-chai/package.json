{
  "name": "primus-sinon-chai",
  "version": "0.0.4",
  "description": "chai assertions and sinon stubs to help test primus programs",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Keyvan Fatehi"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "underscore": "~1.6.0",
    "chai": "~1.9.0",
    "sinon-chai": "~2.5.0",
    "sinon": "~1.8.2"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-bump": "0.0.13"
  },
  "readme": "# primus-sinon-chai\n\nProvides additional assertions and stubs I use while\ntesting realtime applications built on [Primus](https://github.com/primus/primus)\n\nWorks in the browser and node.js\n\nFor browser use, it expects you to have already loaded underscore (or\nlodash?), sinon, chai, sinon-chai\n\n## Usage\n\n### nodejs setup\n\n`npm install --save-dev primus-sinon-chai`\n\n```js\nvar psc = require('primus-sinon-chai');\nglobal.expect = psc.chai.expect;\nglobal.sinon = psc.sinon;\nglobal.sparkStub = psc.spark;\n```\n\n### browser setup\n\n`bower install --save-dev primus-sinon-chai`\n\n```html\n<script src=\"bower_components/chai/chai.js\"></script>\n<script src=\"bower_components/sinonjs-built/pkg/sinon.js\"></script>\n<script src=\"bower_components/sinon-chai/lib/sinon-chai.js\"></script>\n\n<script src=\"bower_components/underscore/underscore.js\"></script>\n<script src=\"bower_components/primus-sinon-chai/index.js\"></script>\n```\n\n### example tests\n\n```js\nvar dConnA = null, bConnA = null;\n\ndescribe(\"communicate bridge\", function() {\n  beforeEach(function() {\n    bConnA = {\n      spark: sparkStub()\n    };\n    dConnA = {\n      spark: sparkStub()\n    };\n  });\n\n  it(\"listens to all connected devices\", function() {\n    expect(bConnA.spark).to.listenOn('device:1');\n    expect(bConnA.spark).to.listenOn('device:2');\n  });\n\n  it(\"does not listen to itself\", function() {\n    expect(bConnA.spark).not.to.listenOn('browser:1');\n  });\n\n  it(\"does not listen to other browsers\", function() {\n    expect(bConnA.spark).not.to.listenOn('browser:2');\n  });\n\n  it(\"listens once for a special command\", function() {\n    expect(bConnA.spark).to.listenOnce('look, ill only say this once');\n  });\n\n  it(\"works\", function() {\n    bConnA.spark.onCallback('device:1')({\n      listen: \"once\"\n    });\n\n    expect(dConnA.emit).to.have.been.calledWith(\n      'relay',\n      'browser:1',\n      { listen: 'once' }\n    );\n\n    dConnA.spark.onceCallback('browser:1')({\n      the: 'response'\n    });\n\n    expect(bConnA.emit).to.have.been.calledWith(\n      'device:1', \n      { the: 'response'}\n    );\n  });\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "primus-sinon-chai@0.0.4",
  "_from": "primus-sinon-chai@~0.0.4"
}
