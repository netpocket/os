#!/bin/bash

# Assuming your base is raspbian-ua-netinst
# NetpocketOS will be installed after some initial tweaks

# Automatically run fsck on reboot if necessary
sed 's/#FSCKFIX=no/FSCKFIX=yes/' /etc/default/rcS > ~/tmprcS ; cat tmprcS > /etc/default/rcS ; rm tmprcS

# -------

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
NOS=/opt/netpocketos
VENDOR=$NOS/vendor/raspbian_hardfloat

if [[ ! -d $NOS ]]; then
  if [[ ! "$DIR" -eq "$NOS" ]]; then
    mv $DIR $NOS
  fi
fi

if [[ ! -f $NOS/server.js ]]; then
  echo "failed to establish source directory"
  exit 127
fi


if ! hash node 2>/dev/null; then
  nodetar=$VENDOR/node-v0.10.24-linux-arm-armv6j-vfp-hard.tar.gz
  cd /usr/local
  tar xzvf $nodetar --strip=1
fi

if ! hash node 2>/dev/null; then
  echo "failed to install node.js !"
  exit 127
fi

cd $NOS

# vendor/raspbian_hardfloat/node_modules is pre-built
# to deploy elsewhere you must do equivalent of
# apt-get update && apt-get install -y python build-essential
# npm rebuild (or npm install from scratch)

ln -s $VENDOR/node_modules $NOS/node_modules

export NOS_PI=1 # Ensure that the raspberry pi related test are also executed
if ! npm test; then
  exit 127
fi

forever=$NOS/node_modules/forever/bin/forever

cat > $NOS/init <<EOF
#!/bin/sh
$forever stop $NOS/server.js > /dev/null 2>&1
export NOS_TOKEN=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 6 | head -n 1)
export RELAY_SERVER=http://ncc-relay.herokuapp.com
export NODE_ENV=production

# TODO ditch forever, maybe use pm2 or whatever uses less ram,
# is this even necessary considering how we are using cluster and domain?

# TODO log rotation (use winston or logrotate)

$forever start -l $NOS/nos.log -a $NOS/server.js
EOF

cat > /etc/rc.local <<EOF
#!/bin/sh -e
su - root "$NOS/init"
exit 0
EOF

# TODO bootstrap camera/firmware stuff

# Enable wifi (TODO uses apt)
cat $NOS/vendor/extras/setup_wifi_support | sh

echo "sending reboot signal"
reboot
